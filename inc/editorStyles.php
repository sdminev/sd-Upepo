<?php

/**
 * Add css styles to the classic and block editor (Gutenberg).
 *
 * The function get_block_editor_theme_styles() is used to add styles to the block editor,  but if a URL
 * is used for the stylesheet, it may fail due to SSL verification on local development.
 * To avoid this issue, a relative path to the theme is used instead.
 * @see https://developer.wordpress.org/reference/functions/get_block_editor_theme_styles/
 *
 * When using Hot Module Replacement, the stylesheet is generated by Vite and loaded from a URL.
 * This URL does not work with the Block Editor, so a Rest API endpoint is used as a fallback.
 */

namespace Flynt\EditorStyles;

use Flynt\Utils\Asset;
use WP_Error;

add_action('admin_init', function () {
    add_theme_support('editor-styles');

    $stylesheet = getEditorStylesheet();
    add_editor_style($stylesheet);
});

function getEditorStylesheet()
{
    if (Asset::isHotModuleReplacement()) {
        return Asset::requireUrl('assets/editor-style.scss');
    }

    $editorStylePath = Asset::requirePath('assets/editor-style.scss');
    return str_replace(get_template_directory(), '', $editorStylePath);
}

/**
 * Fallback to load the stylesheet into the Block Editor while Hot Module Replacement.
 */
if (Asset::isHotModuleReplacement()) {
    // Add the editor styles loaded from the Rest API endpoint to the Block Editor.
    add_action('current_screen', function () {
        $currentScreen = get_current_screen();
        $isBlockEditor = method_exists($currentScreen, 'is_block_editor') && $currentScreen->is_block_editor();

        if ($isBlockEditor) {
            $editorStylePath = get_home_url() . '/wp-json/Flynt/v1/editor-styles';
            add_editor_style($editorStylePath);
        }
    });

    // Should only be used in development mode on local machine â€“ here when isHotModuleReplacement is true!
    add_filter('https_ssl_verify', '__return_false');

    // Add REST API endpoint that outputs the editor styles.
    add_action('rest_api_init', function () {
        register_rest_route('Flynt/v1', '/editor-styles', [
            'methods' => 'GET',
            'permission_callback' => '__return_true',
            'callback' => function () {
                $stylesheet = getEditorStylesheet();
                $content = file_get_contents($stylesheet) ?? null;

                $pattern = '/__vite__css = "(.*)"\s__vite__updateStyle/s';
                preg_match($pattern, $content, $matches);
                isset($matches[1]) === true ? $content = stripcslashes($matches[1]) : $content = null;

                if (empty($content)) {
                    return new WP_Error(
                        'no_editor_styles',
                        __('No editor styles found.', 'flynt'),
                        ['status' => 404]
                    );
                }

                echo $content;
                exit;
            },
        ]);
    });
}
